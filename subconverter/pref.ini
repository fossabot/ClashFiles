[common]
;API mode, set to true to prevent loading local subscriptions or serving local files directly
api_mode=true

;Access token used for performing critical action through Web interface
api_access_token=password

;Default URLs, used when no URL is provided in request, use "|" to separate multiple subscription links, supports local files/URL
default_url=

;URLs to insert before subscription links, can be used to add node(s) to all exported subscriptions, use "|" to separate multiple subscription links, supports local files/URL
insert_url=

;Exclude nodes which remarks match the following patterns. Supports regular expression.
exclude_remarks=(到期|剩余流量|时间|官网|产品|测试)
;exclude_remarks=(other rule)

;Only include nodes which remarks match the following patterns. Supports regular expression.
;include_remarks=V3.*港

;Clash config base used by the generator, supports local files/URL
clash_rule_base=base/all_base.tpl

;Surge config base used by the generator, supports local files/URL
surge_rule_base=base/all_base.tpl

;Surfboard config base used by the generator, supports local files/URL
surfboard_rule_base=base/all_base.tpl

;Mellow config base used by the generator, supports local files/URL
mellow_rule_base=base/all_base.tpl

;Quantumult config base used by the generator, supports local files/URL
quan_rule_base=base/all_base.tpl

;Quantumult X config base used by the generator, supports local files/URL
quanx_rule_base=base/all_base.tpl

;Loon config base used by the generator, supports local files/URL
loon_rule_base=base/all_base.tpl

;Shadowsocks Android config base used by the generator, supports local files/URL
sssub_rule_base=base/all_base.tpl

;Proxy used to download configs, rulesets or subscriptions, set to NONE or empty to disable it, set to SYSTEM to use system proxy.
;Accept cURL-supported proxies (http:// https:// socks4a:// socks5://)
proxy_config=SYSTEM
proxy_ruleset=SYSTEM
proxy_subscription=NONE

;Append a proxy type string ([SS] [SSR] [VMess]) to node remark.
append_proxy_type=false

[userinfo]
;Rules to extract stream data from node
;Format: full_match_regex|new_format_regex
;where new_format_regex should be like "total=$1&left=$2&used=$3"
stream_rule=^剩余流量：(.*?)\|总流量：(.*)$|total=$2&left=$1
stream_rule=^剩余流量：(.*?) (.*)$|total=$1&left=$2
stream_rule=^Bandwidth: (.*?)/(.*)$|used=$1&total=$2
stream_rule=^\[.*?\]剩余(.*?)@(?:.*)$|total=$1
stream_rule=^.*?流量:(.*?) 剩:(?:.*)$|total=$1

;Rules to extract expire time data from node
;Format: full_match_regex|new_format_regex
;where new_format_regex should follow this example: yyyy:mm:dd:hh:mm:ss
time_rule=^过期时间：(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)$|$1:$2:$3:$4:$5:$6
time_rule=^到期时间(:|：)(\d+)-(\d+)-(\d+)$|$1:$2:$3:0:0:0
time_rule=^Smart Access expire: (\d+)/(\d+)/(\d+)$|$1:$2:$3:0:0:0
time_rule=^.*?流量:(?:.*?) 剩:(.*)$|left=$1d

[node_pref]
udp_flag=false
tcp_fast_open_flag=false
sort_flag=false
skip_cert_verify_flag=false
filter_deprecated_nodes=false
append_sub_userinfo=true
clash_use_new_field_name=false

;Rename remarks with the following patterns. Supports regular expression.
;Format: Search_Pattern@Replace_Pattern
;rename_node=IPLC@专线
;rename_node=RELAY@中转
;rename_node=BGP-@

rename_node=

[managed_config]
;Append a '#!MANAGED-CONFIG' info to Surge configurations
write_managed_config=true

;Address prefix for MANAGED-CONFIG info, without the trailing "/".
;This address will also be used for generating /getruleset, /qx-rewrite, /qx-script addresses.
managed_config_prefix=http://127.0.0.1:25500

;Managed config update interval in seconds, determine how long the config will be updated.
config_update_interval=86400

;If config_update_struct is set to true, Surge will require a force update after the interval.
config_update_struct=false

;Device ID to be written to rewrite scripts for some version of Quantumult X
quanx_device_id=

[surge_external_proxy]
;surge_ssr_path=/usr/bin/ssr-local

[emojis]
add_emoji=true
remove_old_emoji=true

;Rule to add emojis. Supports regular expression.
;Format: Remark_Search_Pattern,emoji

;rule=(流量|时间|应急|过期|Bandwidth|expire),🏳️‍🌈
;rule=AC,🇦🇨

rule=(?i:流量|时间|应急|过期|Bandwidth|expire),🏳️‍🌈
rule=AC,🇦🇨
rule=(AR|阿根廷),🇦🇷
rule=(奥地利|维也纳),🇦🇹
rule=(AU|Australia|Sydney|澳大利亚|悉尼),🇦🇺
rule=BE,🇧🇪
rule=(BR|Brazil|巴西|圣保罗),🇧🇷
rule=(Canada|加拿大|蒙特利尔|温哥华|楓葉|枫叶),🇨🇦
rule=(瑞士|苏黎世),🇨🇭
rule=(DE|Germany|法兰克福|德),🇩🇪
rule=丹麦,🇩🇰
rule=ES,🇪🇸
rule=EU,🇪🇺
rule=(Finland|芬兰|赫尔辛基),🇫🇮
rule=(FR|France|法国|巴黎),🇫🇷
rule=(?i:UK|England|United.*?Kingdom|英国|[^-]英|伦敦),🇬🇧
rule=(?i:HK|Hong.*?Kong|HKT|HKBN|HGC|WTT|CMI|[^-]港),🇭🇰
rule=(Indonesia|印尼|印度尼西亚|雅加达),🇮🇩
rule=(Ireland|爱尔兰|都柏林),🇮🇪
rule=(India|印度|孟买),🇮🇳
rule=(Italy|意大利|米兰),🇮🇹
rule=(JP|Japan|日本|东京|大阪|埼玉|[^-]日),🇯🇵
rule=(KP|朝鲜),🇰🇵
rule=(KR|Korea|KOR|首尔|韩|韓),🇰🇷
rule=(MO|Macao|澳门|CTM),🇲🇴
rule=(MY|Malaysia|马来西亚),🇲🇾
rule=(NL|Netherlands|荷兰|阿姆斯特丹),🇳🇱
rule=(PH|Philippines|菲律宾),🇵🇭
rule=(RO|罗马尼亚),🇷🇴
rule=(RU|Russia|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚|哈巴罗夫斯克|俄罗斯|[^-]俄),🇷🇺
rule=(沙特|迪拜),🇸🇦
rule=(SE|Sweden),🇸🇪
rule=(SG|Singapore|新加坡|狮城|[^-]新),🇸🇬
rule=(TH|Thailand|泰国|曼谷),🇹🇭
rule=(TR|Turkey|土耳其|伊斯坦布尔),🇹🇷
rule=(?i:US|America|United.*?States|美国|[^-]美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥),🇺🇸
rule=(VN|越南),🇻🇳
rule=(ZA|南非),🇿🇦
rule=(?i:TW|Taiwan|新北|彰化|CHT|台湾|[^-]台|HINET),🇨🇳
rule=(?i:CN|China|回国|中国|江苏|北京|上海|广州|深圳|杭州|常州|徐州|青岛|宁波|镇江|成都|back),🇨🇳

[ruleset]
;Enable generating rules with rulesets
enabled=true

;Overwrite the existing rules in rule_base
overwrite_original_rules=false

;Perform a ruleset update on request
update_ruleset_on_request=true

;Ruleset addresses, supports local files/URL
;Format: Group name,URL
;        Group name,[]Rule

;surge_ruleset=DIRECT,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Unbreak.list
;surge_ruleset=🎯 全球直连,rules/LocalAreaNetwork.list
;surge_ruleset=🎯 全球直连,[]GEOIP,CN
;surge_ruleset=🐟 漏网之鱼,[]FINAL

surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/LocalAreaNetwork.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/UnBan.list
surge_ruleset=🛑 全球拦截,rules/ACL4SSR/Clash/BanAD.list
surge_ruleset=🍃 应用净化,rules/ACL4SSR/Clash/BanProgramAD.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/GoogleCN.list
surge_ruleset=Ⓜ️ 微软服务,rules/ACL4SSR/Clash/Microsoft.list
surge_ruleset=🍎 苹果服务,rules/ACL4SSR/Clash/Apple.list
surge_ruleset=📲 电报信息,rules/ACL4SSR/Clash/Telegram.list
surge_ruleset=🌍 国外媒体,rules/ACL4SSR/Clash/ProxyMedia.list
surge_ruleset=🔰 节点选择,rules/ACL4SSR/Clash/ProxyLite.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaDomain.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaCompanyIp.list
surge_ruleset=🎯 全球直连,[]GEOIP,CN
surge_ruleset=🐟 漏网之鱼,[]FINAL

[clash_proxy_group]
;Generate Clash Proxy Group with the following patterns. Node filterting rule supports regular expression.
;Format: Group_Name`select`Rule_1`Rule_2`...
;        Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval
;Rule with "[]" prefix will be added directly.

;custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
;custom_proxy_group=UrlTest`url-test`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=FallBack`fallback`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=LoadBalance`load-balance`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=SSID`ssid`default_group`celluar=group0,ssid1=group1,ssid2=group2

;custom_proxy_group=g1`select`!!GROUPID=0
;custom_proxy_group=g2`select`!!GROUPID=1
;custom_proxy_group=v2ray`select`!!GROUP=V2RayProvider

;custom_proxy_group=g1hk`select`!!GROUPID=0!!(HGC|HKBN|PCCW|HKT|hk|港)
;custom_proxy_group=sstw`select`!!GROUP=V2RayProvider!!(深台|彰化|新北|台|tw)

;for forcerule.yml
;custom_proxy_group=!!import:snippets/groups_forcerule.txt

;for Surge rulesets
custom_proxy_group=🔰 节点选择`select`[]♻️ 自动选择`[]🔯 故障转移`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]🇷🇺 俄国节点`[]🚀 手动切换`[]🇨🇳 回国节点`[]DIRECT
custom_proxy_group=🚀 手动切换`select`.*
custom_proxy_group=♻️ 自动选择`url-test`.*`http://www.gstatic.com/generate_204`300
custom_proxy_group=🔯 故障转移`fallback`.*`http://www.gstatic.com/generate_204`180
custom_proxy_group=📲 电报信息`select`[]🔰 节点选择`[]♻️ 自动选择`[]🔯 故障转移`[]🇸🇬 狮城节点`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]🇷🇺 俄国节点`[]🚀 手动切换`[]DIRECT
custom_proxy_group=🌍 国外媒体`select`[]🔰 节点选择`[]♻️ 自动选择`[]🔯 故障转移`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]🇷🇺 俄国节点`[]🚀 手动切换`[]DIRECT
custom_proxy_group=Ⓜ️ 微软服务`select`[]DIRECT`[]🔰 节点选择`[]🔯 故障转移`[]🇺🇲 美国节点`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇨🇳 回国节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇷🇺 俄国节点`[]🚀 手动切换
custom_proxy_group=🍎 苹果服务`select`[]DIRECT`[]🔰 节点选择`[]🔯 故障转移`[]🇺🇲 美国节点`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇨🇳 回国节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇷🇺 俄国节点`[]🚀 手动切换
custom_proxy_group=🎯 全球直连`select`[]DIRECT`[]🔰 节点选择`[]🇨🇳 回国节点`[]♻️ 自动选择`[]🔯 故障转移
custom_proxy_group=🛑 全球拦截`select`[]REJECT`[]DIRECT
custom_proxy_group=🍃 应用净化`select`[]REJECT`[]DIRECT
custom_proxy_group=🐟 漏网之鱼`select`[]🔰 节点选择`[]DIRECT`[]♻️ 自动选择`[]🔯 故障转移`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]🇷🇺 俄国节点`[]🚀 手动切换
custom_proxy_group=🇭🇰 香港节点`url-test`(港|HK)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇨🇳 台湾节点`url-test`(台|新北|彰化|TW)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇸🇬 狮城节点`url-test`(新加坡|坡|狮城|SG)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇯🇵 日本节点`url-test`(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇺🇲 美国节点`url-test`(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇷🇺 俄国节点`url-test`(俄罗斯|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚|哈巴罗夫斯克|RU)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🇨🇳 回国节点`url-test`(中国|回国|江苏|北京|上海|广州|深圳|杭州|常州|徐州|青岛|宁波|镇江|成都|back|CN)`http://www.gstatic.com/generate_204`300
custom_proxy_group=🎥 奈飞节点`select`(NF|解锁|Netflix|NETFLIX)

[template]
template_path=template
clash.http_port=7890
clash.socks_port=7891
clash.allow_lan=true
clash.log_level=warning

[server]
;Address to bind on for Web Server
listen=0.0.0.0

;Port to bind on for Web Server
port=25500

[advanced]
log_level=info
print_debug_info=false
max_pending_connections=10240
max_concurrent_threads=2
enable_base_gen=false
enable_cache=true
cache_subscription=60
cache_config=300
cache_ruleset=21600
async_fetch_ruleset=true
